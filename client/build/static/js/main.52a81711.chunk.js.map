{"version":3,"sources":["routes/CreateRoom.js","routes/Room.js","App.js","index.js"],"names":["CreateRoom","props","className","type","onClick","id","uuid","history","push","Container","styled","div","StyledVideo","video","Video","ref","useRef","useEffect","peer","on","stream","current","srcObject","playsInline","autoPlay","videoConstraints","height","window","innerHeight","width","innerWidth","Room","useState","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","io","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerID","payload","incomingSignal","addPeer","find","p","muted","map","index","_remoteStreams","key","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52a81711.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\";\n\nconst CreateRoom = (props) => {\n  function create() {\n    const id = uuid();\n    props.history.push(`/room/${id}`);\n  }\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center vh-100\">\n      <div className=\"d-grid gap-2 col-2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary btn-lg\"\n          onClick={create}\n        >\n          Create Meeting\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  height: 40%;\n  width: 50%;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2,\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: videoConstraints, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <Container>\n      <StyledVideo muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer, index) => {\n        if (peer._remoteStreams != null) {\n          return <Video key={index} peer={peer} />;\n        }\n      })}\n    </Container>\n  );\n};\n\nexport default Room;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./routes/CreateRoom\";\nimport Room from \"./routes/Room\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/room/:roomID\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}