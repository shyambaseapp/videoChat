{"ast":null,"code":"import _toConsumableArray from\"/home/shyam/Videos/reactProject/roomVChat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/shyam/Videos/reactProject/roomVChat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/shyam/Videos/reactProject/roomVChat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  height: 40%;\\n  width: 50%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  display: flex;\\n  height: 100vh;\\n  width: 90%;\\n  margin: auto;\\n  flex-wrap: wrap;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useRef,useState}from\"react\";import io from\"socket.io-client\";import Peer from\"simple-peer\";import styled from\"styled-components\";var Container=styled.div(_templateObject());var StyledVideo=styled.video(_templateObject2());var Video=function Video(props){var ref=useRef();useEffect(function(){props.peer.on(\"stream\",function(stream){ref.current.srcObject=stream;});},[]);return/*#__PURE__*/React.createElement(StyledVideo,{playsInline:true,autoPlay:true,ref:ref});};var videoConstraints={height:window.innerHeight/2,width:window.innerWidth/2};var Room=function Room(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),peers=_useState2[0],setPeers=_useState2[1];var socketRef=useRef();var userVideo=useRef();var peersRef=useRef([]);var roomID=props.match.params.roomID;useEffect(function(){socketRef.current=io.connect(\"/\");navigator.mediaDevices.getUserMedia({video:videoConstraints,audio:true}).then(function(stream){userVideo.current.srcObject=stream;socketRef.current.emit(\"join room\",roomID);socketRef.current.on(\"all users\",function(users){var peers=[];users.forEach(function(userID){var peer=createPeer(userID,socketRef.current.id,stream);peersRef.current.push({peerID:userID,peer:peer});peers.push(peer);});setPeers(peers);});socketRef.current.on(\"user joined\",function(payload){var peer=addPeer(payload.signal,payload.callerID,stream);peersRef.current.push({peerID:payload.callerID,peer:peer});setPeers(function(users){return[].concat(_toConsumableArray(users),[peer]);});});socketRef.current.on(\"receiving returned signal\",function(payload){var item=peersRef.current.find(function(p){return p.peerID===payload.id;});item.peer.signal(payload.signal);});});},[]);function createPeer(userToSignal,callerID,stream){var peer=new Peer({initiator:true,trickle:false,stream:stream});peer.on(\"signal\",function(signal){socketRef.current.emit(\"sending signal\",{userToSignal:userToSignal,callerID:callerID,signal:signal});});return peer;}function addPeer(incomingSignal,callerID,stream){var peer=new Peer({initiator:false,trickle:false,stream:stream});peer.on(\"signal\",function(signal){socketRef.current.emit(\"returning signal\",{signal:signal,callerID:callerID});});peer.signal(incomingSignal);return peer;}return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(StyledVideo,{muted:true,ref:userVideo,autoPlay:true,playsInline:true}),peers.map(function(peer,index){if(peer._remoteStreams!=null){return/*#__PURE__*/React.createElement(Video,{key:index,peer:peer});}}));};export default Room;","map":{"version":3,"sources":["/home/shyam/Videos/reactProject/roomVChat/client/src/routes/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","styled","Container","div","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index","_remoteStreams"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  height: 40%;\n  width: 50%;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2,\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: videoConstraints, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <Container>\n      <StyledVideo muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer, index) => {\n        if (peer._remoteStreams != null) {\n          return <Video key={index} peer={peer} />;\n        }\n      })}\n    </Container>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}